/* ########## Global styles for entire site ########## */

@import 'tls-colors';
@import 'tls-sizes';
@import 'tls-breakpoints';
@import 'tls-fonts';
@import 'tls-mixins-fadeTo';


// ROOT LEVEL SETTINGS

$transitionDuration: .25s;

body {
	background-color: $pageBackground;
	-webkit-text-size-adjust:none;
	margin: 0;
	padding: 0;
	font-family: $montserrat;
    font-size: 12pt;
    font-weight: 400;
    font-style: normal;
	line-height: 160%;
	
	a, button {
		-webkit-tap-highlight-color: transparent !important;
	}
}

strong {
	font-weight: 600;
}

em {
	font-style: italic;
}

em strong,
strong em {
	font-weight: 600;
	font-style: italic;
}





// HEADLINES //
h1, h2, h3, h4, h5, h6 {
	font-family: $oswald;
	font-weight: 700;
	margin: .75em 0 .1em 0;
	padding: 0;
	line-height: 130%;
	font-style: normal;
    clear: both;
    color: $darkBlue;

    & > a {
        color: inherit;
        &:hover {
            color: $blue-2;
            text-decoration: underline;
        }
        &:active {
            color: $darkBlue-2;
        }
        &:visited {
            color: $darkBlue-2;
            &:hover {
                color: $blue-2;
            }
        }
    }

    &.noTopMargin, &.noMarginTop {
        margin-top: .1em;
    }

	em {
		font-weight: 700;
	}
}

:is(h2, h3, h4, h5, h6) em {
	font-weight: 600;
}

/* If a heading comes right after another heading, reduce top margin (leading) */
:is(h1, h2, h3, h4, h5, h6) + :is(h1, h2, h3, h4, h5, h6) {
	margin-top: .25em;

	&.noMargin {
		margin-top: 0;
	}
}

$baseSize: 23pt;

h1, 
:is(article, aside, nav, section) h1 {
	font-size: $baseSize;
	padding-top: .25em;
	color: $darkBlue;

	&:first-of-type {
		margin-top: 0;
		padding-top: 0;
	}
}
h2 {
	font-size: ($baseSize * .92);
	color: $darkBlue1;
}
h3 {
	font-size: ($baseSize * .85);
	color: $darkBlue2;
}
h4 {
	font-size: ($baseSize * .77);
	color: $darkBlue3;
}
h5 {
	font-size: ($baseSize * .71);
	color: $darkBlue4;
}
h6 {
	font-size: ($baseSize * .66);
	color: $darkBlue5;
}

hr + :is(h1, h2, h3, h4, h5, h6) {
	margin-top: 0;
}

li > :is(h1, h2, h3, h4, h5, h6) {
	margin-top: 0;
}

// first headline of content doesn't need margin
.content > :is(h1, h2, h3, h4, h5, h6) {
    margin-top: 0;
}

main {
	header {
		margin: ($gutter * 2);
	}

    // very first headline inside main is unique
    header > h1,
    section > article > header > h1 {
        color: $green-2;
        font-size: ($baseSize * 1.1) + 0pt;
        border-bottom: 4px solid $logo-yellow;
    }
}

hr {
	margin: ($gutter * 2) 0;
	background-color: $blue5;
	height: $hrThickness;
	border: 0;
	position: relative;

	&.noMargin {
		margin: 0;
	}

	&.tinyMargin {
		margin: ($gutter / 4) 0;
	}

	&.thin {
		height: ($hrThickness / 2);
	}
}

.endOfPageMarker {
	margin: 0;
	padding-left: ($gutter / 2);
	padding-bottom: ($gutter / 2);
	color: $green;
	font-family: $barlowCondensed;
	font-size: 0pt;
	opacity: .5;
	
	&:after {
		font-size: 10pt;
		line-height: 9pt;
		content: "finished";
	}
}


/* ###################################### */
/* RESPONSIVE STYLES (screen size) */
/* TABLET STYLES (not specifically tied to any particular tablet) */
@media screen and (max-width: $tablet) {
	$baseSize: 20;
	h1 {
		font-size: $baseSize + 0pt;
	}
	h2 {
		font-size: ($baseSize * .92) + 0pt;
	}
	h3 {
		font-size: ($baseSize * .85) + 0pt;
	}
	h4 {
		font-size: ($baseSize * .77) + 0pt;
	}
	h5 {
		font-size: ($baseSize * .71) + 0pt;
	}
	h6 {
		font-size: ($baseSize * .66) + 0pt;
	}
}

/* PHONE STYLES (not specifically tied to any particular phone) */
// adjust headline sizes on phones
@media screen and (max-width: $phone) {
	$baseSize: 16;
	h1 {
		font-size: $baseSize + 0pt;
	}
	h2 {
		font-size: ($baseSize * .92) + 0pt;
	}
	h3 {
		font-size: ($baseSize * .86) + 0pt;
	}
	h4 {
		font-size: ($baseSize * .79) + 0pt;
	}
	h5 {
		font-size: ($baseSize * .74) + 0pt;
	}
	h6 {
		font-size: ($baseSize * .70) + 0pt;
	}
}





// LINKS //
html {
	scroll-behavior: smooth;
}

a {
	color: $link;

	&:hover {
        color: $linkHover;
        text-decoration: underline;
	}
	&:active {
		color: $linkActive;
    }
    &:visited {
        color: $linkVisited;
        &:hover {
            color: $linkVisitedHover;
        }
	}

	&.hiddenLink,
	&.hiddenLink:hover,
	&.hiddenLink:active,
	&.hiddenLink:visited {
		color: inherit;
		text-decoration: inherit;
	}
	&.hiddenLink:hover {
		text-decoration: underline;
	}
}





// TEXT (BODY) ELEMENTS //
p, div, li, blockquote, table, thead, th, td, tfoot, figure, dl, dt, dd {
	margin: 0;
	padding: 0;
	empty-cells: show;
}

p {
    margin-bottom: $gutter;
}

p.doubleSpaced, 
.doubleSpaced p {
	margin-bottom: ($gutter * 2);
}

article,
body article {
    max-width: $maxArticleWidth;
    margin: 0 auto ($gutter * 4) auto;

    &:last-of-type {
        margin-bottom: $gutter;
    }
}

body.single article {
    max-width: 100%;
}

body.sideMargins {
	margin: 0 $gutter;
}

ul.reset,
ol.reset {
	list-style-type: none;
	margin: 0;
	padding: 0;

	& > li {
		margin: 0;
		padding: 0;
	}
}

ul.space, 
ol.space {
	& > li {
		margin-bottom: $gutter;
	}
}

// blocked items have complete outline and margin between
ul.blockedItems,
ol.blockedItems {
	& > li {
		margin-bottom: ($gutter / 1.5);
		padding: ($gutter / 1.5);
		border: 1px solid $blue5;
		background-color: $frostOverlay;
		
		&:last-child {
			margin-bottom: 0;
		}

		&:hover {
			border-color: $blue-2;
		}
	}
}

// lined items have no margin and single line between (no line above first; no line below last)
ul.linedItems, 
ol.linedItems {
	& > li {
		margin: 0;
		padding: ($gutter / 1.5);
		border-bottom: 1px solid $borderOnLight;
		background-color: $frostOverlay;
		
		&:last-child {
			border-bottom: 0px solid transparent;
			margin-bottom: 0;
		}
	}
}


blockquote {
	font-family: $lato;
	font-style: italic;
	font-size: 13pt;
	margin: $gutter;
	margin-left: ($gutter * 2);
	margin-right: ($gutter * 0);
	padding: ($gutter * .5);
	padding-left: ($gutter * .75);
	padding-right: ($gutter * .75);
	border: 1px solid $blue;
	border-right-width: 0;
	border-bottom-width: 0;
	background-color: $white;
	border: 2px solid $borderOnLight1;
	border-left-width: ($pxGutter * 1);
	
	cite {
		display: block;
		margin-top: $gutter;
		text-align: right;
		font-family: $montserrat;
		font-weight: 600;
		font-size: 12pt;
	}

	p {
		&:first-of-type {
			margin-top: 0;
		}
	
		&:last-of-type {
			margin-bottom: 0;
		}
	}
}

/* RESPONSIVE SIZE ADJUSTMENTS */
// tablets & larger
@media screen and (min-width: $medium){
	blockquote {
		margin-left: ($gutter * 2);
		margin-right: ($gutter * 2);
		padding-left: ($gutter * 1);
		padding-right: ($gutter * 1);
		border: 2px solid $borderOnLight1;
		border-left-width: ($pxGutter * 1.5);
	}
}

// desktop screens & larger
@media screen and (min-width: $large){
	blockquote {
		margin-left: ($gutter * 4);
		margin-right: ($gutter * 4);
		padding-left: ($gutter * 1.5);
		padding-right: ($gutter * 1.5);
		border: 3px solid $borderOnLight1;
		border-left-width: ($pxGutter * 2);
	}
}



.hint {
	font-size: 75%;
	line-height: 125%;
	margin-top: ($pxGutter / 4);
	margin-left: $gutter;
	opacity: .75;
	font-style: italic;

	&.straight {
		font-style: normal;
	}

	&.noMargin {
		margin-left: 0;
	}

	&.inline {
		display: inline !important;
	}

	&.error {
		color: $logo-red-shadow;
		opacity: 1;
		font-size: 80%;
		font-style: normal;
	}
}

.finePrint,
.legal {
	color: $greyText;
	font-size: 9pt;
}

.helpCursor {
	cursor: help;
}

.clickToCopyContent {
	cursor: copy;
	transition: color ($transitionDuration * 4), text-shadow ($transitionDuration * 4); // slow OUT
	
	&:hover {
		text-shadow: 0 0 3px rgba($green5, .5);

		text-decoration-line:  underline;
		text-decoration-color: $green;
		text-decoration-style: dotted;
		text-decoration-thickness: 2px;

		-webkit-text-decoration-line:  underline;
		-webkit-text-decoration-color: $green;
		-webkit-text-decoration-style: dotted;
		-webkit-text-decoration-thickness: 2px;
	}
	
	&.copied {
		color: $green-2 !important;
		text-shadow: 0 0 3px rgba($green5, 1.0);
		transition: color ($transitionDuration / 4), text-shadow ($transitionDuration / 4); // fast IN
	}
}

* {
	@include fadeToSeries();
}

.burgundyText {
	color: $burgundyText;
	@include fadeToSeries($burgundyText);
}
.redText {
	color: $redText;
	@include fadeToSeries($redText);
}
.orangeText {
	color: $orangeText;
	@include fadeToSeries($orangeText);
}
.yellowText {
	color: $yellowText;
	@include fadeToSeries($yellowText);
}
.limeText {
	color: $limeText;
	@include fadeToSeries($limeText);
}
.greenText {
	color: $greenText;
	@include fadeToSeries($greenText);
}
.cyanText {
	color: $cyanText;
	@include fadeToSeries($cyanText);
}
.blueText {
	color: $blueText;
	@include fadeToSeries($blueText);
}
.purpleText {
	color: $purpleText;
	@include fadeToSeries($purpleText);
}
.magentaText {
	color: $magentaText;
	@include fadeToSeries($magentaText);
}
.pinkText {
	color: $pinkText;
	@include fadeToSeries($pinkText);
}
.tanText {
	color: $tanText;
	@include fadeToSeries($tanText);
}
.brownText {
	color: $brownText;
	@include fadeToSeries($brownText);
}
.charcoalText {
	color: $charcoalText;
	@include fadeToSeries($charcoalText);
}
.greyText, .grayText {
	color: $greyText;
	@include fadeToSeries($greyText);
}

$highlightBorderThickness: .15em;
.highlighter {
	// fallback to green highlighter if no color is specified
	border-bottom: $highlightBorderThickness solid rgba($green, .666);
	background-color: rgba($green, .30);
	color: darken($color: $green, $amount: 30);

	&.burgundy {
		border-bottom: $highlightBorderThickness solid rgba($burgundy, .5);
		background-color: rgba($burgundy, .20);
		color: darken($color: $burgundy, $amount: 10);
	}
	&.red {
		border-bottom: $highlightBorderThickness solid rgba($red, .666);
		background-color: rgba($red, .25);
		color: darken($color: $red, $amount: 30);
	}
	&.orange {
		border-bottom: $highlightBorderThickness solid rgba($logo-yellow-shadow, .666);
		background-color: rgba($logo-yellow-shadow, .25);
		color: darken($color: $orange, $amount: 30);
	}
	&.yellow {
		border-bottom: $highlightBorderThickness solid rgba($yellow, 1);
		background-color: rgba($yellow, .25);
		color: darken($color: $orange, $amount: 30);
	}
	&.lime {
		border-bottom: $highlightBorderThickness solid rgba($lime, .75);
		background-color: rgba($lime, .20);
		color: darken($color: $green, $amount: 10);
	}
	&.green {
		border-bottom: $highlightBorderThickness solid rgba($green, .666);
		background-color: rgba($green, .25);
		color: darken($color: $green, $amount: 30);
	}
	&.cyan {
		border-bottom: $highlightBorderThickness solid rgba($blueTransition3, .75);
		background-color: rgba($blueTransition3, .333);
		color: darken($color: $blue3, $amount: 30);
	}
	&.blue {
		border-bottom: $highlightBorderThickness solid rgba($blue, .666);
		background-color: rgba($blue, .2);
		color: darken($color: $blue, $amount: 30);
	}
	&.purple, 
	&.violet {
		border-bottom: $highlightBorderThickness solid rgba($hotPurple, .666);
		background-color: rgba($hotPurple, .2);
		color: darken($color: $purple, $amount: 30);
	}
	&.magenta {
		border-bottom: $highlightBorderThickness solid rgba($magenta, .666);
		background-color: rgba($magenta, .25);
		color: darken($color: $magenta, $amount: 40);
	}
	&.pink {
		border-bottom: $highlightBorderThickness solid rgba($pink, 1);
		background-color: rgba($pink, .5);
		color: darken($color: $red5, $amount: 40);
	}
	&.tan {
		border-bottom: $highlightBorderThickness solid rgba($tan, .666);
		background-color: rgba($tan, .25);
		color: darken($color: $tan, $amount: 40);
	}
	&.brown {
		border-bottom: $highlightBorderThickness solid rgba($brown, .666);
		background-color: rgba($brown, .333);
		color: darken($color: $brown, $amount: 40);
	}
	&.charcoal {
		border-bottom: $highlightBorderThickness solid rgba($charcoal, .666);
		background-color: rgba($charcoal, .333);
		color: darken($color: $charcoal, $amount: 40);
	}
	&.grey {
		border-bottom: $highlightBorderThickness solid rgba($grey5, .75);
		background-color: rgba($grey5, .5);
		color: darken($color: $grey4, $amount: 40);
	}
}

/* use classList.add('hidden') or classList.remove('hidden') */
.hidden,
.hide {
	display: none !important;
	pointer-events: none;
}

.nobr {
	white-space: nowrap;
}

.clearfix {
	clear: both;
}

.noSelect {
	-webkit-touch-callout: none; /* iOS Safari */
		-webkit-user-select: none; /* Safari */
		-khtml-user-select: none; /* Konqueror HTML */
			-moz-user-select: none; /* Old versions of Firefox */
			-ms-user-select: none; /* Internet Explorer/Edge */
				user-select: none; /* Non-prefixed version, currently
								supported by Chrome, Edge, Opera and Firefox */
}

code {
	color: $grey1;
	font-family: $code;
	font-size: 120%;
	letter-spacing: -.5px;
}





/* ###################################### */
/* SCREEN AND PRINT MEDIA SPECIFIC STYLES */
// SCREEN
@media screen {
	.noScreen {
		display: none;
	}
}



// PRINT
@media print {
	body {
        background-color: transparent;
    }

    .noPrint {
		display: none;
    }

	.burgundyText {
		color: $redTextPrint;
	}
	.redText {
		color: $redTextPrint;
	}
	.orangeText {
		color: $orangeTextPrint;
	}
	.yellowText {
		color: $yellowTextPrint;
	}
	.limeText {
		color: $limeTextPrint;
	}
	.greenText {
		color: $greenTextPrint;
	}
	.cyanText {
		color: $cyanTextPrint;
	}
	.blueText {
		color: $blueTextPrint;
	}
	.purpleText {
		color: $purpleTextPrint;
	}
	.magentaText {
		color: $magentaTextPrint;
	}
	.pinkText {
		color: $pinkTextPrint;
	}
	.tanText {
		color: $tanTextPrint;
	}
	.brownText {
		color: $brownTextPrint;
	}
	.charcoalText {
		color: $charcoalTextPrint;
	}
	.greyText, .grayText {
		color: $greyTextPrint;
	}
}
