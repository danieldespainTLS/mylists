/* ########## Mixins for SCSS ########## */
/*       use: @include blueButton;       */

@import 'tls-sizes';
@import 'tls-colors';
@import 'tls-fonts';

$enabledWeight: 600;
$disabledWeight: 400;


/* STOP!
   For buttons use class='button blue' etc.
   declared in tls-inputs.scss
*/

// BLUE SUBTLE BUTTON (standard)
@mixin subtleButton() {
	display: inline-block;
	text-decoration: none;
	padding: 0 ($gutter / 2);
	margin: 0;
	border: $buttonBorderWidth solid $lightBlue-2;
	background-color: $lightBlue;
	color: $blue;
	font-size: 10pt;
	cursor: pointer;
}

@mixin subtleButtonHover(){
	background-color: $lightBlue-1;
	color: $darkBlue5;
	border-color: $blue5;
}

@mixin subtleButtonActive(){
	background-color: $lightBlue-2;
	color: $green-2;
	border-color: $green;
}

@mixin subtleButtonDisabled() {
	border: $buttonBorderWidth solid $lightBlue-2;
	background-color: $lightBlue2;
	color: rgba($blue, .5);
	text-decoration: none;
	font-weight: $disabledWeight;
	cursor: default;
}

// BLUE SUBTLE GHOST BUTTON (secondary or not urgent)
@mixin subtleButtonGhost() {
	background-color: transparent;
	background: none;
	border: $buttonBorderWidth solid $blue5;
	text-decoration: none;
}

@mixin subtleButtonGhostHover() {
	@include blueButtonGhostHover;
}

@mixin subtleButtonGhostActive() {
	@include blueButtonGhostActive;
}

@mixin subtleButtonGhostDisabled() {
	@include blueButtonGhostDisabled;
	border: $buttonBorderWidth solid rgba($blue5, .5);
}

// BLUE SUBTLE FLAT BUTTON (cancel or alternative actions)
@mixin subtleButtonFlat() {
	background-color: transparent;
	background-image: none;
	background: none;
	color: $blue;
	border: none;
}

@mixin subtleButtonFlatHover() {
	@include blueButtonFlatHover;
}

@mixin subtleButtonFlatActive() {
	@include blueButtonFlatActive;
}

@mixin subtleButtonFlatDisabled() {
	@include blueButtonFlatDisabled;
}



// GREEN SUBTLE BUTTON
@mixin subtleGreenButton() {
	@include subtleButton();
	
	background-color: rgba($logo-green, .1);
	color: $logo-green;
	border: $buttonBorderWidth solid rgba($logo-green, .5);
}

@mixin subtleGreenButtonHover(){
	@include subtleButtonHover();

	background-color: rgba($logo-green, .15);
	color: $logo-green-shadow;
	border: $buttonBorderWidth solid rgba($logo-green, .65);
}

@mixin subtleGreenButtonActive(){
	@include subtleButtonActive();

	background-color: rgba($logo-green, .175);
	color: $logo-green-shadow;
	border: $buttonBorderWidth solid $green-2;
}

@mixin subtleGreenButtonDisabled() {
	@include subtleButtonDisabled();
	
	background-color: rgba($logo-green, .05);
	color: rgba($logo-green, .5);
	border: $buttonBorderWidth solid rgba($green-2, .25);
	font-weight: $disabledWeight;
	cursor: default;
}

// GREEN SUBTLE GHOST BUTTON (secondary or not urgent)
@mixin subtleGreenButtonGhost() {
	@include greenButtonGhost();
}

@mixin subtleGreenButtonGhostHover() {
	@include greenButtonGhostHover;
}

@mixin subtleGreenButtonGhostActive() {
	@include greenButtonGhostActive;
}

@mixin subtleGreenButtonGhostDisabled() {
	@include greenButtonGhostDisabled;
	cursor: default;
}

// GREEN SUBTLE FLAT BUTTON (cancel or alternative actions)
@mixin subtleGreenButtonFlat() {
	@include greenButtonFlat();
}

@mixin subtleGreenButtonFlatHover() {
	@include greenButtonFlatHover;
}

@mixin subtleGreenButtonFlatActive() {
	@include greenButtonFlatActive;
}

@mixin subtleGreenButtonFlatDisabled() {
	@include greenButtonFlatDisabled;
	cursor: default;
}




// RED SUBTLE BUTTON
@mixin subtleRedButton() {
	@include subtleButton();
	
	background-color: rgba($logo-red, .1);
	color: $red5;
	border: $buttonBorderWidth solid rgba($red5, .5);
}

@mixin subtleRedButtonHover(){
	@include subtleButtonHover();

	background-color: rgba($logo-red, .15);
	color: $logo-red-shadow;
	border: $buttonBorderWidth solid rgba($red-2, .65);
}

@mixin subtleRedButtonActive(){
	@include subtleButtonActive();

	background-color: rgba($logo-red, .175);
	color: $logo-apple-deep-shadow;
	border: $buttonBorderWidth solid $red-2;
}

@mixin subtleRedButtonDisabled() {
	@include subtleButtonDisabled();
	
	background-color: rgba($logo-red, .05);
	color: rgba($red5, .5);
	border: $buttonBorderWidth solid rgba($red5, .25);
	font-weight: $disabledWeight;
	cursor: default;
}

// RED SUBTLE GHOST BUTTON (secondary or not urgent)
@mixin subtleRedButtonGhost() {
	@include redButtonGhost();
	border: $buttonBorderWidth solid $red5;
}

@mixin subtleRedButtonGhostHover() {
	@include redButtonGhostHover;
}

@mixin subtleRedButtonGhostActive() {
	@include redButtonGhostActive;
}

@mixin subtleRedButtonGhostDisabled() {
	@include redButtonGhostDisabled;
	border: $buttonBorderWidth solid rgba($red5, .5);
	cursor: default;
}

// RED SUBTLE FLAT BUTTON (cancel or alternative actions)
@mixin subtleRedButtonFlat() {
	@include redButtonFlat();
}

@mixin subtleRedButtonFlatHover() {
	@include redButtonFlatHover;
}

@mixin subtleRedButtonFlatActive() {
	@include redButtonFlatActive;
}

@mixin subtleRedButtonFlatDisabled() {
	@include redButtonFlatDisabled;
	cursor: default;
}





@mixin edit-this-flag {
	@include subtleButton();
	margin: 0 0 ($gutter / 2) 0;
	padding-right: ($gutter * 2);
	border-left-width: $gutter;
	border-top-width: ($gutter / 3);
	border-bottom-right-radius: $gutter * 2;
	// display: none;

	&:hover {
		@include subtleButtonHover();
		text-decoration: none;
	}
}





// buttonCoreStyles can be used to reset a system button
// or to turn a link <a hrefâ€¦> into a basic button
@mixin buttonCoreStyles($size:"regular"){
	-webkit-tap-highlight-color: transparent !important;
	
	$multiplier: 1;
	$textScale: 1;
	$paddingVertical: ($gutter / 2);
	
	@if $size == "tiny" {
		$multiplier: .575;
		$textScale: 1.15;
		$paddingVertical: ($gutter / 6);
	} @else if $size == "small" {
		$multiplier: .75;
		$textScale: 1.25;
		$paddingVertical: ($gutter / 5);
	} @else if $size == "large" {
		$multiplier: 1.5;
		$textScale: .75;
		$paddingVertical: ($gutter / 1.0);
	}
	display: inline-block;
	min-width: ($buttonMinWidth * $multiplier);
	font-size: (13pt * ($multiplier * $textScale));
	line-height: 120%; // needs leading if button text wraps
	margin: 0;
	padding: $paddingVertical ($gutter / 1);

	background-color: $blueGradientDark;
	border: none;
    border-radius: 4px;
    font-family: $montserrat;
	font-weight: $enabledWeight;
	font-style: normal;
	text-transform: capitalize;
	text-align: center;
	box-sizing: border-box;
	color: $white;
	cursor: pointer;

	&:hover {
		text-decoration: none;
	}
}





// BLUE BUTTON (standard)
@mixin blueButton(){
	color: $lightBlue5;
	background: linear-gradient(to bottom, $blueGradientLight 0%, $blueGradientDark 110%);
	border: $buttonBorderWidth solid $blueGradientDark;
	svg {
		fill: $lightBlue5;
	}
}

@mixin blueButtonHover(){
	color: $white;
	background: linear-gradient(to bottom, $blueGradientLight 50%, $blueGradientDark 200%);
	svg {
		fill: $white;
	}
}

@mixin blueButtonActive(){
	color: $yellow5;
	background: linear-gradient(to top, $blueGradientDark 50%, $blueGradientLight 200%);
	svg {
		fill: $yellow5;
	}
}

@mixin blueButtonDisabled(){
	color: rgba($blue, .66);
	background-color: transparent;
	background: linear-gradient(to bottom, rgba($blue, .33) 0%, rgba($blueGradientLight, .075) 100%);
	border: $buttonBorderWidth solid rgba($blue5, .2); // contentAreaFillPrint
	font-weight: $disabledWeight;
	cursor: default;
	svg {
		fill: rgba($blue, .66);
	}
}

// BLUE GHOST BUTTON (secondary or not urgent)
@mixin blueButtonGhost(){
	color: $blueGradientDark;
	background-color: transparent;
	background: none;
	border: $buttonBorderWidth solid $blueGradientDark;
	svg {
		fill: $blueGradientDark;
	}
}

@mixin blueButtonGhostHover(){
	color: $logo-blue;
	border-color: $logo-blue;
	svg {
		fill: $logo-blue;
	}
}

@mixin blueButtonGhostActive(){
	color: $green;
	border-color: $green-2;
	svg {
		fill: $green;
	}
}

@mixin blueButtonGhostDisabled(){
	color: $blue;
	border: $buttonBorderWidth solid $blue;
	font-weight: $disabledWeight;
	opacity: .5;
	svg {
		fill: $blue;
	}
}

// BLUE FLAT BUTTON (cancel or alternative actions)
@mixin blueButtonFlat(){
	@include blueButtonGhost;
	border: 0px solid transparent;
}

@mixin blueButtonFlatHover(){
	@include blueButtonGhostHover;
	border-color: transparent;
}

@mixin blueButtonFlatActive(){
	@include blueButtonGhostActive;
	border-color: transparent;
}

@mixin blueButtonFlatDisabled(){
	@include blueButtonGhostDisabled;
	border: 0px solid transparent;
}





// GREEN BUTTON (call to action)
@mixin greenButton(){
	color: $white;
	background: linear-gradient(to bottom, $green2 -10%, $green-2 110%);
	border: $buttonBorderWidth solid $green-2;
	svg {
		fill: $white;
	}
}

@mixin greenButtonHover(){
	color: $white;
	background: linear-gradient(to bottom, $green2 50%, $green-2 200%);
	svg {
		fill: $white;
	}
}

@mixin greenButtonActive(){
	color: $yellow4;
	background: linear-gradient(to top, $green2 50%, $green-2 200%);
	svg {
		fill: $yellow4;
	}
}

@mixin greenButtonDisabled(){
	color: rgba($green, .75);
	background-color: transparent;
	background: linear-gradient(to bottom, rgba($green, .33) 0%, rgba($green, .075) 100%);
	border: $buttonBorderWidth solid rgba($green5, .2);
	font-weight: $disabledWeight;
	cursor: default;
	svg {
		fill: rgba($green, .75);
	}
}

// GREEN GHOST BUTTON (secondary or not urgent)
@mixin greenButtonGhost(){
	color: $logo-green;
	background-color: transparent;
	background: none;
	border: $buttonBorderWidth solid $logo-green;
	svg {
		fill: $logo-green;
	}
}

@mixin greenButtonGhostHover(){
	color: $logo-green-shadow;
	border-color: $logo-green-shadow;
	svg {
		fill: $logo-green-shadow;
	}
}

@mixin greenButtonGhostActive(){
	color: $logo-green-shadow;
	border-color: $logo-green-shadow;
	svg {
		fill: $logo-green-shadow;
	}
}

@mixin greenButtonGhostDisabled(){
	color: $green5;
	border: $buttonBorderWidth solid $green5;
	font-weight: $disabledWeight;
	opacity: .5;
	svg {
		fill: $green5;
	}
}

// GREEN FLAT BUTTON (cancel or alternative actions)
@mixin greenButtonFlat(){
	@include greenButtonGhost;
	border: 0px solid transparent;
}

@mixin greenButtonFlatHover(){
	@include greenButtonGhostHover;
	border-color: transparent;
}

@mixin greenButtonFlatActive(){
	@include greenButtonGhostActive;
	border-color: transparent;
}

@mixin greenButtonFlatDisabled(){
	@include greenButtonGhostDisabled;
	border: 0px solid transparent;
}





// RED BUTTON (cancel or destructive)
@mixin redButton(){
	color: $yellow5;
	background: linear-gradient(to bottom, $logo-red -10%, $logo-red-shadow 110%);
	border: $buttonBorderWidth solid $logo-apple-deep-shadow;
	svg {
		fill: $yellow5;
	}
}

@mixin redButtonHover(){
	color: $white;
	background: linear-gradient(to bottom, $logo-red 50%, $logo-red-shadow 200%);
	svg {
		fill: $white;
	}
}

@mixin redButtonActive(){
	color: $yellow5;
	background: linear-gradient(to top, $logo-red 50%, $logo-red-shadow 200%);
	svg {
		fill: $yellow5;
	}
}

@mixin redButtonDisabled(){
	color: rgba($red5, .5);
	background-color: $lightBlue;
	background: linear-gradient(to bottom, rgba($red, .33) 0%, rgba($red5, .075) 100%);
	border: $buttonBorderWidth solid rgba($red5, .2);
	font-weight: $disabledWeight;
	cursor: default;
	svg {
		fill: rgba($red5, .5);
	}
}

// RED GHOST BUTTON (secondary or not urgent)
@mixin redButtonGhost(){
	color: $logo-red;
	background-color: transparent;
	background: none;
	border: $buttonBorderWidth solid $logo-red;
	svg {
		fill: $logo-red;
	}
}

@mixin redButtonGhostHover(){
	color: $logo-red-shadow;
	border-color: $logo-red-shadow;
	svg {
		fill: $logo-red-shadow;
	}
}

@mixin redButtonGhostActive(){
	color: $logo-apple;
	border-color: $logo-apple;
	svg {
		fill: $logo-apple;
	}
}

@mixin redButtonGhostDisabled(){
	color: $red5;
	border: $buttonBorderWidth solid $red5;
	font-weight: $disabledWeight;
	opacity: .5;
	svg {
		fill: $red5;
	}
}

// RED FLAT BUTTON (cancel or alternative actions)
@mixin redButtonFlat(){
	@include redButtonGhost;
	border: 0px solid transparent;
}

@mixin redButtonFlatHover(){
	@include redButtonGhostHover;
	border-color: transparent;
}

@mixin redButtonFlatActive(){
	@include redButtonGhostActive;
	border-color: transparent;
}

@mixin redButtonFlatDisabled(){
	@include redButtonGhostDisabled;
	border: 0px solid transparent;
}