/* Emulate Common iOS Inputs */

@import 'tls-colors';

// color variables
$onColor: $green;
$offColor: $white;
$trackBorderColor: $grey3;
$knobColor: $halfwayToWhite;

// size variables
$diameter: 20px;
$borderLineWidth: 1px;
$trackWidth: 40px;
$roundness: .5; // .5 or higher will be circle; < .5 will be more square

@mixin inactiveMixin {
	content: "";
	position: absolute;
	display: block;
}

@mixin beforeAnimation {
	transition: all $transitionDuration cubic-bezier(.24, 0, .5, 1); // how fast track color fades to 'off'
}

@mixin afterAnimation {
	box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.1), 
	0 3px 0px 0 hsla(0, 0%, 0%, .04), 
	0 3px 9px hsla(0, 0%, 0%, .13), 
	0 2px 3px hsla(0, 0%, 0%, .05);
	transition: all ($transitionDuration * 1.25) cubic-bezier(.54, 1.60, .5, 1); // how fast knob moves
}

// toggle switch (checkbox as a slider)
.slidingToggleContainer {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	gap: ($gutter / 2);
}

input[type=checkbox] {
	box-sizing: border-box;

	&.slidingToggle {
		opacity: 0; // hides checkbox
		position: absolute;

		& + label {
			display: inline-block;
			position: relative;
			user-select: none;
			width: $trackWidth;
			height: $diameter;
			box-sizing: border-box;
			cursor: pointer;
			
			// track
			&:before {
				@include inactiveMixin;
				@include beforeAnimation;
				width: ($trackWidth + $borderLineWidth);
				height: $diameter;
				top: 0;
				left: 0;
				background-color: $offColor; // inactive color
				border: $borderLineWidth solid $trackBorderColor;
				border-radius: ($diameter * $roundness);
				box-sizing: border-box;
			}

			// knob
			&:after {
				@include inactiveMixin;
				@include afterAnimation;
				width: ($diameter - $borderLineWidth - $borderLineWidth);
				height: ($diameter - $borderLineWidth - $borderLineWidth);
				top: $borderLineWidth;
				left: $borderLineWidth;
				background-color: $knobColor;
				border-radius: ($diameter * $roundness);
				box-sizing: border-box;
			}

			// words (visible 'label')
			& + span.description {
				font-size: 10pt !important;
				line-height: 10pt !important;
				opacity: .5;
			}
		}

		// when active
		&:checked {
			& + label {
				&:before {
					background-color: $onColor; // active color
					transition: all $transitionDuration cubic-bezier(0, 0, 0, .1); // how fast track color fades to 'on'
				}

				&:after {
					left: ($trackWidth + ($borderLineWidth * 2) - $diameter);
				}

				& + span.description {
					opacity: 1;
				}
			}
		}
	}
}